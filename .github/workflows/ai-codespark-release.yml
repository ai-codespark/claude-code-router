name: ai-codespark-release

on:
  release:
    types:
      - created

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
            npm_config_arch: x64
            binary_name: claude-code-router.exe
          - os: ubuntu-latest
            platform: linux
            arch: x64
            npm_config_arch: x64
            binary_name: claude-code-router
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Install pkg for binary building
        run: npm install -g pkg
      - name: Build binary from source (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          New-Item -ItemType Directory -Force -Path dist
          pkg . --targets node20-${{ matrix.platform }}-${{ matrix.arch }} --output dist/${{ matrix.binary_name }}
        shell: powershell
      - name: Build binary from source (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p dist
          pkg . --targets node20-${{ matrix.platform }}-${{ matrix.arch }} --output dist/${{ matrix.binary_name }}
        shell: bash
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: claude-code-router-${{ matrix.platform }}-${{ matrix.arch }}
          path: dist/${{ matrix.binary_name }}

  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          find artifacts/ -name "claude-code-router*" -type f -exec cp {} release-assets/ \;
          ls -la release-assets/
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          token: ${{ secrets.AI_CODESPARK_TOKEN }}
          repository: ai-codespark/claude-code-router
          files: release-assets/*
